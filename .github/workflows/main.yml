# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 21, 23, 29 ]
        target: [ default ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Usage of cache for making the builds faster
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      # Setup our JDK environment
      - name: Setup Android JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      ## Build the project in staging mode ##
      - name: Build project
        run: ./gradlew assembleDebug

      ## Add a kotlin linter
      - name: Run Kotlin Linter
        run: ./gradlew lintDebug

      ## Adding step for testing
      - name: Run Unit Tests
        run: ./gradlew -Pci --console=plain testDebugUnitTest

      ## Adding instrumentation test
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86
          profile: Nexus 6
          script: ./gradlew connectedCheck --stacktrace
